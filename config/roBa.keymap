#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        DEFAULT {
            bindings = <
&mt LEFT_ALT Q      &kp W         &kp E       &kp R        &kp T                                       &kp Y        &kp U  &lt 4 I  &kp O  &kp P
&mt LEFT_CONTROL A  &kp S         &kp D       &kp F        &kp G    &none                       &none  &kp H        &kp J  &lt 1 K  &kp L  &mo 3
&mt LEFT_SHIFT Z    &kp X         &kp C       &kp V        &kp B    &none                       &none  &kp N        &kp M  &none    &none  &none
&none               &kp LEFT_WIN  &kp ESCAPE  &lt 1 SPACE  &kp TAB  &mt LEFT_ALT BACKSPACE      &none  &lt 2 ENTER                         &to 0
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        MOUSE {
            bindings = <
&trans          &kp NUMBER_7  &kp N8        &kp NUMBER_9  &trans                      &kp K_MUTE  &kp C_VOLUME_UP  &kp C_PLAY_PAUSE  &kp C_VOLUME_DOWN  &kp LG(LC(V))
&kp INT_HENKAN  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &trans  &trans      &none   &none       &mkp MB1         &mkp MB3          &mkp MB2           &kp INT_MUHENKAN
&kp NUMBER_0    &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &trans  &none       &trans           &trans            &trans             &none
&trans          &trans        &trans        &trans        &trans  &trans      &trans  &to 5                                                             &to 0
            >;
        };

        SYMBOL {
            bindings = <
&kp SINGLE_QUOTE      &kp PERCENT    &kp LEFT_BRACE        &kp ASTERISK  &kp PIPE                                &kp UNDERSCORE   &kp EQUAL   &kp RIGHT_BRACE        &kp AMPERSAND     &kp DOUBLE_QUOTES
&kp HASH              &kp LESS_THAN  &kp LEFT_PARENTHESIS  &kp COMMA     &kp QUESTION  &trans         &trans     &kp EXCLAMATION  &kp PERIOD  &kp RIGHT_PARENTHESIS  &kp GREATER_THAN  &kp SLASH
&mt LEFT_SHIFT CARET  &kp SEMICOLON  &kp LEFT_BRACKET      &kp PLUS      &kp PERCENT   &kp GRAVE      &kp TILDE  &kp AT_SIGN      &kp MINUS   &kp RIGHT_BRACKET      &kp COLON         &kp BACKSLASH
&trans                &trans         &trans                &trans        &trans        &trans         &trans     &trans                                                                &to 0
            >;
        };

        SCROLL {
            bindings = <
&trans          &trans      &trans  &trans  &trans                            &trans        &trans          &kp UP_ARROW    &trans           &trans
&trans          &trans      &trans  &trans  &trans  &trans      &trans        &trans        &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans
&trans          &trans      &trans  &trans  &trans  &trans      &trans        &trans        &trans          &trans          &trans           &trans
&bt BT_CLR_ALL  &bt BT_CLR  &trans  &trans  &trans  &trans      &bt BT_SEL 1  &bt BT_SEL 0                                                   &to 0
            >;
        };

        GAME {
            bindings = <
&kp Q   &kp W         &kp E       &kp R         &kp T                                         &kp Y   &kp U     &kp I     &kp O     &kp P
&kp A   &kp S         &kp D       &kp F         &kp G         &trans            &trans        &kp H   &mkp MB1  &mkp MB3  &mkp MB2  &kp ENTER
&kp Z   &kp X         &kp C       &kp V         &kp B         &trans            &trans        &kp N   &kp M     &kp J     &kp K     &kp L
&trans  &kp LEFT_WIN  &kp ESCAPE  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3      &kp NUMBER_4  &kp N5                                &to 0
            >;

            sensor-bindings = <&inc_dec_kp K_SCROLL_UP K_SCROLL_DOWN>;
        };
    };
};
